{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\S08P22C104\\\\frontend\\\\src\\\\pages\\\\ImageConvertor\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Form from \"./Form\";\nimport Images from \"./Images\";\n// APIs\nimport { getTextAPI } from \"../../apis/translate\";\nimport { changeImageAPI } from \"../../apis/changeImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ImageConvertor() {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(\"\"); // 그림 옵션 선택\n  const [korean, setKorean] = useState(\"\"); // 번역할 문장\n  const [imageUrls, setImageUrls] = useState([]); // 변환된 이미지 url\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  // 변환하기 버튼 눌렀을 때\n  const handleSubmit = async () => {\n    if (selectedOption === \"\") {\n      alert(\"화풍을 선택하세요.\");\n      return;\n    }\n    changeImage(translateText() + ` ${selectedOption}`);\n  };\n\n  // 번역 api\n  const translateText = async () => {\n    const data = await getTextAPI(korean);\n    return data;\n  };\n\n  // 그림 변환 api\n  const changeImage = async result => {\n    const data = await changeImageAPI(result);\n    setIsLoaded(true);\n    setImageUrls(data);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      handleSubmit: handleSubmit,\n      setKorean: setKorean,\n      setSelectedOption: setSelectedOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isLoaded && /*#__PURE__*/_jsxDEV(Images, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n}\n_s(ImageConvertor, \"i2BSb5knSEX0CkRXGqW6u2dBgOo=\");\n_c = ImageConvertor;\nvar _c;\n$RefreshReg$(_c, \"ImageConvertor\");","map":{"version":3,"names":["React","useState","Form","Images","getTextAPI","changeImageAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageConvertor","_s","selectedOption","setSelectedOption","korean","setKorean","imageUrls","setImageUrls","isLoaded","setIsLoaded","handleSubmit","alert","changeImage","translateText","data","result","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/multicampus/Desktop/S08P22C104/frontend/src/pages/ImageConvertor/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Form from \"./Form\";\r\nimport Images from \"./Images\";\r\n// APIs\r\nimport { getTextAPI } from \"../../apis/translate\";\r\nimport { changeImageAPI } from \"../../apis/changeImage\";\r\n\r\nexport default function ImageConvertor() {\r\n  const [selectedOption, setSelectedOption] = useState<string>(\"\"); // 그림 옵션 선택\r\n  const [korean, setKorean] = useState<string>(\"\"); // 번역할 문장\r\n  const [imageUrls, setImageUrls] = useState<string[]>([]); // 변환된 이미지 url\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n\r\n  // 변환하기 버튼 눌렀을 때\r\n  const handleSubmit = async () => {\r\n    if (selectedOption === \"\") {\r\n      alert(\"화풍을 선택하세요.\");\r\n      return;\r\n    }\r\n    changeImage(translateText() + ` ${selectedOption}`);\r\n  }\r\n\r\n  // 번역 api\r\n  const translateText = async () => {\r\n    const data = await getTextAPI(korean);\r\n    return data;\r\n  };\r\n\r\n  // 그림 변환 api\r\n  const changeImage = async (result: string) => {\r\n    const data = await changeImageAPI(result);\r\n    setIsLoaded(true);\r\n    setImageUrls(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form handleSubmit={handleSubmit} setKorean={setKorean} setSelectedOption={setSelectedOption}/>\r\n      {isLoaded && <Images />}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B;AACA,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EAClE,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAW,EAAE,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAU,KAAK,CAAC;;EAExD;EACA,MAAMmB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIR,cAAc,KAAK,EAAE,EAAE;MACzBS,KAAK,CAAC,YAAY,CAAC;MACnB;IACF;IACAC,WAAW,CAACC,aAAa,EAAE,GAAI,IAAGX,cAAe,EAAC,CAAC;EACrD,CAAC;;EAED;EACA,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,IAAI,GAAG,MAAMpB,UAAU,CAACU,MAAM,CAAC;IACrC,OAAOU,IAAI;EACb,CAAC;;EAED;EACA,MAAMF,WAAW,GAAG,MAAOG,MAAc,IAAK;IAC5C,MAAMD,IAAI,GAAG,MAAMnB,cAAc,CAACoB,MAAM,CAAC;IACzCN,WAAW,CAAC,IAAI,CAAC;IACjBF,YAAY,CAACO,IAAI,CAAC;EACpB,CAAC;EAED,oBACEjB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA,CAACL,IAAI;MAACkB,YAAY,EAAEA,YAAa;MAACL,SAAS,EAAEA,SAAU;MAACF,iBAAiB,EAAEA;IAAkB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,EAC9FZ,QAAQ,iBAAIX,OAAA,CAACJ,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBACtB;AAEP;AAACnB,EAAA,CAlCuBD,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}