{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\S08P22C104\\\\frontend\\\\src\\\\pages\\\\ImageConvertor\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"./Form\";\nimport Images from \"./Images\";\n// APIs\nimport { getTextAPI } from \"../../apis/translate\";\nimport { changeImageAPI } from \"../../apis/changeImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ImageConvertor() {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(\"\"); // 그림 옵션 선택\n  const [korean, setKorean] = useState(\"\"); // 번역할 문장\n  const [imageUrls, setImageUrls] = useState([]); // 변환된 이미지 url\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [translated, setTranslated] = useState(\"\");\n\n  // 변환하기 버튼 눌렀을 때\n  const handleSubmit = async () => {\n    if (selectedOption === \"\") {\n      alert(\"화풍을 선택하세요.\");\n      return;\n    }\n  };\n\n  // 번역 api\n  const translateText = async () => {\n    const data = await getTextAPI(korean);\n    setTranslated(data);\n  };\n  useEffect(() => {\n    if (translated !== \"\") {}\n  }, [translated]);\n\n  // 그림 변환 api\n  const changeImage = async result => {\n    const data = await changeImageAPI(result);\n    setIsLoaded(true);\n    let tmp = [];\n    data.forEach(item => {\n      tmp.push(item.url);\n    });\n    setImageUrls(tmp);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      handleSubmit: handleSubmit,\n      korean: korean,\n      setKorean: setKorean,\n      setSelectedOption: setSelectedOption,\n      selectedOption: selectedOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), isLoaded && /*#__PURE__*/_jsxDEV(Images, {\n      imageUrls: imageUrls\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n}\n_s(ImageConvertor, \"D2RQDiAAIWKx4TX1Rxzrx+vX4XI=\");\n_c = ImageConvertor;\nvar _c;\n$RefreshReg$(_c, \"ImageConvertor\");","map":{"version":3,"names":["React","useState","useEffect","Form","Images","getTextAPI","changeImageAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageConvertor","_s","selectedOption","setSelectedOption","korean","setKorean","imageUrls","setImageUrls","isLoaded","setIsLoaded","translated","setTranslated","handleSubmit","alert","translateText","data","changeImage","result","tmp","forEach","item","push","url","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/multicampus/Desktop/S08P22C104/frontend/src/pages/ImageConvertor/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Form from \"./Form\";\r\nimport Images from \"./Images\";\r\n// APIs\r\nimport { getTextAPI } from \"../../apis/translate\";\r\nimport { changeImageAPI } from \"../../apis/changeImage\";\r\n\r\nexport default function ImageConvertor() {\r\n  const [selectedOption, setSelectedOption] = useState<string>(\"\"); // 그림 옵션 선택\r\n  const [korean, setKorean] = useState<string>(\"\"); // 번역할 문장\r\n  const [imageUrls, setImageUrls] = useState<string[]>([]); // 변환된 이미지 url\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n  const [translated, setTranslated] = useState<string>(\"\");\r\n\r\n  // 변환하기 버튼 눌렀을 때\r\n  const handleSubmit = async () => {\r\n    if (selectedOption === \"\") {\r\n      alert(\"화풍을 선택하세요.\");\r\n      return;\r\n    }\r\n  };\r\n\r\n  // 번역 api\r\n  const translateText = async () => {\r\n    const data = await getTextAPI(korean);\r\n    setTranslated(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (translated !== \"\") {\r\n    }\r\n  }, [translated]);\r\n\r\n  // 그림 변환 api\r\n  const changeImage = async (result: string) => {\r\n    const data = await changeImageAPI(result);\r\n    setIsLoaded(true);\r\n    let tmp: string[] = [];\r\n    data.forEach((item: any) => {\r\n      tmp.push(item.url);\r\n    });\r\n    setImageUrls(tmp);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        handleSubmit={handleSubmit}\r\n        korean={korean}\r\n        setKorean={setKorean}\r\n        setSelectedOption={setSelectedOption}\r\n        selectedOption={selectedOption}\r\n      />\r\n      {isLoaded && <Images imageUrls={imageUrls} />}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B;AACA,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EAClE,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAW,EAAE,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAU,KAAK,CAAC;EACxD,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAS,EAAE,CAAC;;EAExD;EACA,MAAMsB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIV,cAAc,KAAK,EAAE,EAAE;MACzBW,KAAK,CAAC,YAAY,CAAC;MACnB;IACF;EACF,CAAC;;EAED;EACA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,IAAI,GAAG,MAAMrB,UAAU,CAACU,MAAM,CAAC;IACrCO,aAAa,CAACI,IAAI,CAAC;EACrB,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACd,IAAImB,UAAU,KAAK,EAAE,EAAE,CACvB;EACF,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAMM,WAAW,GAAG,MAAOC,MAAc,IAAK;IAC5C,MAAMF,IAAI,GAAG,MAAMpB,cAAc,CAACsB,MAAM,CAAC;IACzCR,WAAW,CAAC,IAAI,CAAC;IACjB,IAAIS,GAAa,GAAG,EAAE;IACtBH,IAAI,CAACI,OAAO,CAAEC,IAAS,IAAK;MAC1BF,GAAG,CAACG,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC;IACpB,CAAC,CAAC;IACFf,YAAY,CAACW,GAAG,CAAC;EACnB,CAAC;EAED,oBACErB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACE1B,OAAA,CAACL,IAAI;MACHoB,YAAY,EAAEA,YAAa;MAC3BR,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA,SAAU;MACrBF,iBAAiB,EAAEA,iBAAkB;MACrCD,cAAc,EAAEA;IAAe;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/B,EACDnB,QAAQ,iBAAIX,OAAA,CAACJ,MAAM;MAACa,SAAS,EAAEA;IAAU;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBAC5C;AAEP;AAAC1B,EAAA,CAjDuBD,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}