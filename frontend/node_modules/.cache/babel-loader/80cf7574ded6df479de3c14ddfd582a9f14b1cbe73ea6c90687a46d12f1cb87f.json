{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = process.env.REACT_APP_API_URL;\nconst user = localStorage.getItem(\"user\");\nconst token = JSON.parse(user);\nconst regions = {\n  서울: 11,\n  부산: 21,\n  대구: 22,\n  인천: 23,\n  광주: 24,\n  대전: 25,\n  울산: 26,\n  세종: 29,\n  경기: 31,\n  강원: 32,\n  충북: 33,\n  충남: 34,\n  전북: 35,\n  전남: 36,\n  경북: 37,\n  경남: 38,\n  제주: 39\n};\n\n// 현재 좌표를 기준으로 지역코드 불러오기\nexport async function getRegionCodeAPI(longitude, latitude) {\n  try {\n    const data = await axios({\n      method: \"GET\",\n      url: `${API_URL}/external/regioncode?longitude=${longitude}&latitude=${latitude}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(data);\n\n    // 지역 이름 - string\n    // const region: string = data[\"region_1depth_name\"];\n\n    return {\n      regionName: data.data,\n      regionCode: regions[data.data]\n    };\n    // return data;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n// 도서 소장 도서관 정보 불러오기\nexport async function getLibraryAPI(ISBN, REGION_CODE) {\n  try {\n    const {\n      data\n    } = await axios({\n      method: \"GET\",\n      url: `${API_URL}/external/library?isbn=${ISBN}&regioncode=${REGION_CODE}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data.response.libs;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n// 도서관별 장서/대출 데이터 조회\nexport async function getItemSrchAPI(ISBN, LIB_CODE) {\n  console.log(LIB_CODE);\n  try {\n    const {\n      data\n    } = await axios({\n      method: \"GET\",\n      url: `${API_URL}/external/itemsrch?isbn=${ISBN}&libcode=${LIB_CODE}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data.response.docs[0].doc;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n// 도서관별 도서 소장여부 및 대출 가능여부 조회\nexport async function getBookExistAPI(ISBN, LIB_CODE) {\n  try {\n    const {\n      data\n    } = await axios({\n      method: \"GET\",\n      url: `${API_URL}/external/bookexist?isbn=${ISBN}&libcode=${LIB_CODE}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data.response.result.loanAvailable;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n// 베스트 키워드 조회\n// 이달의 키워드 조회\nexport async function getBestKeywordAPI(YEAR, MONTH) {\n  try {\n    const {\n      data\n    } = await axios({\n      method: \"GET\",\n      url: `${API_URL}/external/bestkeyword?year=${YEAR}&month=${MONTH}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data.response.keywords;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n// 내 지역 도서관 인기 대출 도서 목록 조회\nexport async function getLibraryBooksAPI(REGION_CODE) {\n  let tmp = [];\n  let title = [];\n  try {\n    const data = await axios({\n      method: \"GET\",\n      url: `${API_URL}/external/librarybooks?regioncode=${REGION_CODE}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    for (let book of data.data.response.docs) {\n      if (!title.includes(book.doc.bookname)) {\n        tmp.push(book.doc);\n        title.push(book.doc.bookname);\n      }\n      if (tmp.length === 10) break;\n    }\n    return tmp;\n  } catch (e) {\n    console.log(e);\n  }\n}","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","user","localStorage","getItem","token","JSON","parse","regions","서울","부산","대구","인천","광주","대전","울산","세종","경기","강원","충북","충남","전북","전남","경북","경남","제주","getRegionCodeAPI","longitude","latitude","data","method","url","headers","Authorization","console","log","regionName","regionCode","e","getLibraryAPI","ISBN","REGION_CODE","response","libs","getItemSrchAPI","LIB_CODE","docs","doc","getBookExistAPI","result","loanAvailable","getBestKeywordAPI","YEAR","MONTH","keywords","getLibraryBooksAPI","tmp","title","book","includes","bookname","push","length"],"sources":["C:/Users/multicampus/Desktop/S08P22C104/frontend/src/apis/library.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\nconst user: any = localStorage.getItem(\"user\");\r\nconst token = JSON.parse(user);\r\n\r\n\r\nconst regions: { [key: string]: number } = {\r\n  서울: 11,\r\n  부산: 21,\r\n  대구: 22,\r\n  인천: 23,\r\n  광주: 24,\r\n  대전: 25,\r\n  울산: 26,\r\n  세종: 29,\r\n  경기: 31,\r\n  강원: 32,\r\n  충북: 33,\r\n  충남: 34,\r\n  전북: 35,\r\n  전남: 36,\r\n  경북: 37,\r\n  경남: 38,\r\n  제주: 39,\r\n};\r\n\r\n// 현재 좌표를 기준으로 지역코드 불러오기\r\nexport async function getRegionCodeAPI(longitude: number, latitude: number) {\r\n  try {\r\n    const data  = await axios({\r\n      method: \"GET\",\r\n      url: `${API_URL}/external/regioncode?longitude=${longitude}&latitude=${latitude}`,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    console.log(data);\r\n    \r\n    // 지역 이름 - string\r\n    // const region: string = data[\"region_1depth_name\"];\r\n    \r\n\r\n    return { regionName: data.data, regionCode: regions[data.data] };\r\n    // return data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n\r\n// 도서 소장 도서관 정보 불러오기\r\nexport async function getLibraryAPI(ISBN: any, REGION_CODE: number) {\r\n  try {\r\n    const { data } = await axios({\r\n      method: \"GET\",\r\n      url: `${API_URL}/external/library?isbn=${ISBN}&regioncode=${REGION_CODE}`,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return data.response.libs;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n// 도서관별 장서/대출 데이터 조회\r\nexport async function getItemSrchAPI(ISBN: any, LIB_CODE: number) {\r\n  console.log(LIB_CODE)\r\n  try {\r\n    const { data } = await axios({\r\n      method: \"GET\",\r\n      url: `${API_URL}/external/itemsrch?isbn=${ISBN}&libcode=${LIB_CODE}`,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return data.response.docs[0].doc;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n// 도서관별 도서 소장여부 및 대출 가능여부 조회\r\nexport async function getBookExistAPI(ISBN: any, LIB_CODE: number) {\r\n  try {\r\n    const { data } = await axios({\r\n      method: \"GET\",\r\n      url: `${API_URL}/external/bookexist?isbn=${ISBN}&libcode=${LIB_CODE}`,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return data.response.result.loanAvailable;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n// 베스트 키워드 조회\r\n// 이달의 키워드 조회\r\nexport async function getBestKeywordAPI(YEAR: string, MONTH: string) {\r\n  try {\r\n    const { data } = await axios({\r\n      method: \"GET\",\r\n      url: `${API_URL}/external/bestkeyword?year=${YEAR}&month=${MONTH}`,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return data.response.keywords;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n// 내 지역 도서관 인기 대출 도서 목록 조회\r\nexport async function getLibraryBooksAPI(REGION_CODE: number) {\r\n  let tmp: any = [];\r\n  let title: string[] = [];\r\n  try {\r\n    const data = await axios({\r\n      method: \"GET\",\r\n      url: `${API_URL}/external/librarybooks?regioncode=${REGION_CODE}`,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    for (let book of data.data.response.docs) {\r\n      if (!title.includes(book.doc.bookname)) {\r\n        tmp.push(book.doc);\r\n        title.push(book.doc.bookname);\r\n      }\r\n\r\n      if (tmp.length === 10) break;\r\n    }\r\n\r\n    return tmp;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}