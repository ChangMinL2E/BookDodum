{"ast":null,"code":"import axios from \"axios\";\nconst LIBRARY_API_URL = process.env.REACT_APP_LIBRARY_API_URL;\nconst LIBRARY_API_KEY = process.env.REACT_APP_LIBRARY_API_KEY;\nconst API_URL = process.env.REACT;\n\n// 도서 소장 도서관 정보 불러오기\nexport async function getLibraryAPI(ISBN, REGION_CODE) {\n  try {\n    const {\n      data\n    } = await axios({\n      method: \"GET\",\n      url: `${LIBRARY_API_URL}/libSrchByBook?authKey=${LIBRARY_API_KEY}&isbn=${ISBN}&region=${REGION_CODE}&format=json`\n    });\n    return data.response.libs;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n// 도서관별 장서/대출 데이터 조회\nexport async function getItemSrchAPI(ISBN, LIB_CODE) {\n  try {\n    const {\n      data\n    } = await axios({\n      method: \"GET\",\n      url: `${LIBRARY_API_URL}/itemSrch?authKey=${LIBRARY_API_KEY}&type=ALL&libCode=${LIB_CODE}&isbn13=${ISBN}&format=json`\n    });\n    return data.response.docs[0].doc;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n// 도서관별 도서 소장여부 및 대출 가능여부 조회\nexport async function getBookExistAPI(ISBN, LIB_CODE) {\n  try {\n    const {\n      data\n    } = await axios({\n      method: \"GET\",\n      url: `${LIBRARY_API_URL}/bookExist?authKey=${LIBRARY_API_KEY}&libCode=${LIB_CODE}&isbn13=${ISBN}&format=json`\n    });\n    return data.response.result.loanAvailable;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n//베스트 키워드 조회\n// 이달의 키워드 조회\nexport async function getBestKeywordAPI(year, month) {\n  try {\n    const {\n      data\n    } = await axios({\n      method: \"GET\",\n      url: `${LIBRARY_API_URL}/monthlyKeywords?authKey=${LIBRARY_API_KEY}&month=${year}-${month}`\n    });\n    return new XMLparser().parseFromString(data).children[1].children.slice(0, 60);\n  } catch (e) {\n    console.log(e);\n  }\n}","map":{"version":3,"names":["axios","LIBRARY_API_URL","process","env","REACT_APP_LIBRARY_API_URL","LIBRARY_API_KEY","REACT_APP_LIBRARY_API_KEY","API_URL","REACT","getLibraryAPI","ISBN","REGION_CODE","data","method","url","response","libs","e","console","log","getItemSrchAPI","LIB_CODE","docs","doc","getBookExistAPI","result","loanAvailable","getBestKeywordAPI","year","month","XMLparser","parseFromString","children","slice"],"sources":["C:/Users/multicampus/Desktop/S08P22C104/frontend/src/apis/library.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst LIBRARY_API_URL = process.env.REACT_APP_LIBRARY_API_URL\r\nconst LIBRARY_API_KEY = process.env.REACT_APP_LIBRARY_API_KEY\r\nconst API_URL = process.env.REACT\r\n\r\n// 도서 소장 도서관 정보 불러오기\r\nexport async function getLibraryAPI(ISBN:any, REGION_CODE:number) {\r\n  try {\r\n    const { data } = await axios({\r\n      method: \"GET\",\r\n      url: `${LIBRARY_API_URL}/libSrchByBook?authKey=${LIBRARY_API_KEY}&isbn=${ISBN}&region=${REGION_CODE}&format=json`,\r\n    });\r\n    return data.response.libs;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n// 도서관별 장서/대출 데이터 조회\r\nexport async function getItemSrchAPI(ISBN:any, LIB_CODE:number) {\r\n  try {\r\n    const { data } = await axios({\r\n      method: \"GET\",\r\n      url: `${LIBRARY_API_URL}/itemSrch?authKey=${LIBRARY_API_KEY}&type=ALL&libCode=${LIB_CODE}&isbn13=${ISBN}&format=json`,\r\n    });\r\n    return data.response.docs[0].doc;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n// 도서관별 도서 소장여부 및 대출 가능여부 조회\r\nexport async function getBookExistAPI(ISBN:any, LIB_CODE:number) {\r\n  try {\r\n    const { data } = await axios({\r\n      method: \"GET\",\r\n      url: `${LIBRARY_API_URL}/bookExist?authKey=${LIBRARY_API_KEY}&libCode=${LIB_CODE}&isbn13=${ISBN}&format=json`,\r\n    });\r\n    return data.response.result.loanAvailable;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n//베스트 키워드 조회\r\n// 이달의 키워드 조회\r\nexport async function getBestKeywordAPI(year, month) {\r\n  try {\r\n    const { data } = await axios({\r\n      method: \"GET\",\r\n      url: `${LIBRARY_API_URL}/monthlyKeywords?authKey=${LIBRARY_API_KEY}&month=${year}-${month}`,\r\n    });\r\n\r\n    return new XMLparser().parseFromString(data).children[1].children.slice(0, 60);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB;AAC7D,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,yBAAyB;AAC7D,MAAMC,OAAO,GAAGL,OAAO,CAACC,GAAG,CAACK,KAAK;;AAEjC;AACA,OAAO,eAAeC,aAAaA,CAACC,IAAQ,EAAEC,WAAkB,EAAE;EAChE,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMZ,KAAK,CAAC;MAC3Ba,MAAM,EAAE,KAAK;MACbC,GAAG,EAAG,GAAEb,eAAgB,0BAAyBI,eAAgB,SAAQK,IAAK,WAAUC,WAAY;IACtG,CAAC,CAAC;IACF,OAAOC,IAAI,CAACG,QAAQ,CAACC,IAAI;EAC3B,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;EAChB;AACF;;AAEA;AACA,OAAO,eAAeG,cAAcA,CAACV,IAAQ,EAAEW,QAAe,EAAE;EAC9D,IAAI;IACF,MAAM;MAAET;IAAK,CAAC,GAAG,MAAMZ,KAAK,CAAC;MAC3Ba,MAAM,EAAE,KAAK;MACbC,GAAG,EAAG,GAAEb,eAAgB,qBAAoBI,eAAgB,qBAAoBgB,QAAS,WAAUX,IAAK;IAC1G,CAAC,CAAC;IACF,OAAOE,IAAI,CAACG,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG;EAClC,CAAC,CAAC,OAAON,CAAC,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;EAChB;AACF;;AAEA;AACA,OAAO,eAAeO,eAAeA,CAACd,IAAQ,EAAEW,QAAe,EAAE;EAC/D,IAAI;IACF,MAAM;MAAET;IAAK,CAAC,GAAG,MAAMZ,KAAK,CAAC;MAC3Ba,MAAM,EAAE,KAAK;MACbC,GAAG,EAAG,GAAEb,eAAgB,sBAAqBI,eAAgB,YAAWgB,QAAS,WAAUX,IAAK;IAClG,CAAC,CAAC;IACF,OAAOE,IAAI,CAACG,QAAQ,CAACU,MAAM,CAACC,aAAa;EAC3C,CAAC,CAAC,OAAOT,CAAC,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;EAChB;AACF;;AAEA;AACA;AACA,OAAO,eAAeU,iBAAiBA,CAACC,IAAI,EAAEC,KAAK,EAAE;EACnD,IAAI;IACF,MAAM;MAAEjB;IAAK,CAAC,GAAG,MAAMZ,KAAK,CAAC;MAC3Ba,MAAM,EAAE,KAAK;MACbC,GAAG,EAAG,GAAEb,eAAgB,4BAA2BI,eAAgB,UAASuB,IAAK,IAAGC,KAAM;IAC5F,CAAC,CAAC;IAEF,OAAO,IAAIC,SAAS,EAAE,CAACC,eAAe,CAACnB,IAAI,CAAC,CAACoB,QAAQ,CAAC,CAAC,CAAC,CAACA,QAAQ,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EAChF,CAAC,CAAC,OAAOhB,CAAC,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;EAChB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}