{"ast":null,"code":"import axios from \"axios\";\nconst LIBRARY_API_URL = process.env.REACT_APP_LIBRARY_API_URL;\nconst LIBRARY_API_KEY = process.env.REACT_APP_LIBRARY_API_KEY;\nconst API_URL = process.env.REACT_APP_API_URL;\n\n// 도서 소장 도서관 정보 불러오기\nexport async function getLibraryAPI(ISBN, REGION_CODE) {\n  try {\n    const {\n      data\n    } = await axios({\n      method: \"GET\",\n      url: `${LIBRARY_API_URL}/libSrchByBook?authKey=${LIBRARY_API_KEY}&isbn=${ISBN}&region=${REGION_CODE}&format=json`\n    });\n    return data.response.libs;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n// 도서관별 장서/대출 데이터 조회\nexport async function getItemSrchAPI(ISBN, LIB_CODE) {\n  try {\n    const {\n      data\n    } = await axios({\n      method: \"GET\",\n      url: `${LIBRARY_API_URL}/itemSrch?authKey=${LIBRARY_API_KEY}&type=ALL&libCode=${LIB_CODE}&isbn13=${ISBN}&format=json`\n    });\n    return data.response.docs[0].doc;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n// 도서관별 도서 소장여부 및 대출 가능여부 조회\nexport async function getBookExistAPI(ISBN, LIB_CODE) {\n  try {\n    const {\n      data\n    } = await axios({\n      method: \"GET\",\n      url: `${LIBRARY_API_URL}/bookExist?authKey=${LIBRARY_API_KEY}&libCode=${LIB_CODE}&isbn13=${ISBN}&format=json`\n    });\n    return data.response.result.loanAvailable;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n// 베스트 키워드 조회\n// 이달의 키워드 조회\nexport async function getBestKeywordAPI(YEAR, MONTH) {\n  try {\n    const {\n      data\n    } = await axios({\n      method: \"GET\",\n      url: `${API_URL}/api/bestkeyword?year=${YEAR}&month=${MONTH}`\n    });\n    return data.response.keywords;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n// 내 지역 도서관 인기 대출 도서 목록 조회\nexport async function getLibraryBooksAPI(REGION_CODE) {\n  let tmp = [];\n  let title = [];\n  try {\n    const data = await axios({\n      method: \"GET\",\n      url: `${API_URL}/api/librarybooks?regioncode=${REGION_CODE}`\n    });\n    for (let book of data.data.response.docs) {\n      if (!title.includes(book.doc.bookname)) {\n        tmp.push(book.doc);\n        title.push(book.doc.bookname);\n      }\n      if (tmp.length === 10) break;\n    }\n    return tmp;\n  } catch (e) {\n    console.log(e);\n  }\n}","map":{"version":3,"names":["axios","LIBRARY_API_URL","process","env","REACT_APP_LIBRARY_API_URL","LIBRARY_API_KEY","REACT_APP_LIBRARY_API_KEY","API_URL","REACT_APP_API_URL","getLibraryAPI","ISBN","REGION_CODE","data","method","url","response","libs","e","console","log","getItemSrchAPI","LIB_CODE","docs","doc","getBookExistAPI","result","loanAvailable","getBestKeywordAPI","YEAR","MONTH","keywords","getLibraryBooksAPI","tmp","title","book","includes","bookname","push","length"],"sources":["C:/Users/multicampus/Desktop/S08P22C104/frontend/src/apis/library.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst LIBRARY_API_URL = process.env.REACT_APP_LIBRARY_API_URL;\r\nconst LIBRARY_API_KEY = process.env.REACT_APP_LIBRARY_API_KEY;\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\n// 도서 소장 도서관 정보 불러오기\r\nexport async function getLibraryAPI(ISBN: any, REGION_CODE: number) {\r\n  try {\r\n    const { data } = await axios({\r\n      method: \"GET\",\r\n      url: `${LIBRARY_API_URL}/libSrchByBook?authKey=${LIBRARY_API_KEY}&isbn=${ISBN}&region=${REGION_CODE}&format=json`,\r\n    });\r\n    return data.response.libs;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n// 도서관별 장서/대출 데이터 조회\r\nexport async function getItemSrchAPI(ISBN: any, LIB_CODE: number) {\r\n  try {\r\n    const { data } = await axios({\r\n      method: \"GET\",\r\n      url: `${LIBRARY_API_URL}/itemSrch?authKey=${LIBRARY_API_KEY}&type=ALL&libCode=${LIB_CODE}&isbn13=${ISBN}&format=json`,\r\n    });\r\n    return data.response.docs[0].doc;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n// 도서관별 도서 소장여부 및 대출 가능여부 조회\r\nexport async function getBookExistAPI(ISBN: any, LIB_CODE: number) {\r\n  try {\r\n    const { data } = await axios({\r\n      method: \"GET\",\r\n      url: `${LIBRARY_API_URL}/bookExist?authKey=${LIBRARY_API_KEY}&libCode=${LIB_CODE}&isbn13=${ISBN}&format=json`,\r\n    });\r\n    return data.response.result.loanAvailable;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n// 베스트 키워드 조회\r\n// 이달의 키워드 조회\r\nexport async function getBestKeywordAPI(YEAR: string, MONTH: string) {\r\n  try {\r\n    const { data } = await axios({\r\n      method: \"GET\",\r\n      url: `${API_URL}/api/bestkeyword?year=${YEAR}&month=${MONTH}`,\r\n    });\r\n    return data.response.keywords;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n// 내 지역 도서관 인기 대출 도서 목록 조회\r\nexport async function getLibraryBooksAPI(REGION_CODE: number) {\r\n  let tmp: any = [];\r\n  let title: string[] = [];\r\n  try {\r\n    const data = await axios({\r\n      method: \"GET\",\r\n      url: `${API_URL}/api/librarybooks?regioncode=${REGION_CODE}`,\r\n    });\r\n\r\n    for (let book of data.data.response.docs) {\r\n      if (!title.includes(book.doc.bookname)) {\r\n        tmp.push(book.doc);\r\n        title.push(book.doc.bookname);\r\n      }\r\n\r\n      if (tmp.length === 10) break;\r\n    }\r\n\r\n    return tmp;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}