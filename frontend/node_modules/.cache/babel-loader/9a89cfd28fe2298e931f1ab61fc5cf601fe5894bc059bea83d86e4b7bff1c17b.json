{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\S08P22C104\\\\frontend\\\\src\\\\pages\\\\Home\\\\index.tsx\",\n  _s = $RefreshSig$();\n/* global kakao */\nimport React, { useEffect, useState } from \"react\";\nimport Nav from \"../../Components/Common/Nav\";\nimport Banner from \"./Banner\";\nimport BookList from \"./BookList\";\nimport LibraryBooks from \"./LibraryBooks\";\nimport ReadingBooks from \"./ReadingBooks\";\nimport BestKeyword from \"./BestKeyword\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nexport default function Home() {\n  _s();\n  const [map, setMap] = useState(null);\n  const [curLocation, setCurLocation] = useState([33.457701, 126.570667]);\n  useEffect(() => {\n    // 현재 위치 정보 - 좌표\n    navigator.geolocation.getCurrentPosition(position => {\n      setCurLocation([position.coords.latitude, position.coords.longitude]);\n      console.log(position);\n      getRegionCode(String(position.coords.longitude), String(position.coords.latitude));\n    });\n  }, []);\n  useEffect(() => {}, [curLocation]);\n  const getRegionCode = async (longitude, latitude) => {\n    const data = await getRE;\n    // const data = await getRegionCodeAPI(longitude, latitude)\n    // console.log(data)\n  };\n\n  // useEffect(() => {\n  //   console.log('얍')\n  //   const container = document.getElementById('map')\n  //   const options = {\n  //     center: new kakao.maps.LatLng(curLocation[0], curLocation[1]),\n  //     level: 4\n  //   };\n  //   let map = new kakao.maps.Map(container, options)\n  // },[curLocation])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReadingBooks, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BookList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LibraryBooks, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BestKeyword, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Home, \"VPfIhfsOCqGBreaWJ/tkCSbahKU=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Nav","Banner","BookList","LibraryBooks","ReadingBooks","BestKeyword","jsxDEV","_jsxDEV","Fragment","_Fragment","kakao","window","Home","_s","map","setMap","curLocation","setCurLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","log","getRegionCode","String","data","getRE","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/multicampus/Desktop/S08P22C104/frontend/src/pages/Home/index.tsx"],"sourcesContent":["/* global kakao */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Nav from \"../../Components/Common/Nav\";\r\nimport DetailModal from \"../../Components/Contents/DetailModal\";\r\nimport Banner from \"./Banner\";\r\nimport BookList from \"./BookList\";\r\nimport LibraryBooks from \"./LibraryBooks\"\r\nimport sample from '../../Assets/Images/sample.png'\r\nimport ReadingBooks from \"./ReadingBooks\";\r\nimport BestKeyword from \"./BestKeyword\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { getRegionCodeAPI } from \"../../apis/region\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    kakao: any;\r\n  }\r\n}\r\n\r\nconst { kakao } = window;\r\n\r\nexport default function Home() {\r\n  const [map, setMap] = useState(null)\r\n  const [curLocation, setCurLocation] = useState<[number, number]>([33.457701, 126.570667])\r\n\r\n  useEffect(() => {\r\n    // 현재 위치 정보 - 좌표\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      setCurLocation([position.coords.latitude, position.coords.longitude])\r\n      console.log(position)\r\n      getRegionCode(String(position.coords.longitude), String(position.coords.latitude))\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n\r\n  }, [curLocation])\r\n\r\n  const getRegionCode = async (longitude: string, latitude: string) => {\r\n    const data = await getRE\r\n    // const data = await getRegionCodeAPI(longitude, latitude)\r\n    // console.log(data)\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   console.log('얍')\r\n  //   const container = document.getElementById('map')\r\n  //   const options = {\r\n  //     center: new kakao.maps.LatLng(curLocation[0], curLocation[1]),\r\n  //     level: 4\r\n  //   };\r\n  //   let map = new kakao.maps.Map(container, options)\r\n  // },[curLocation])\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <div id=\"map\" style={{ width: \"100%\", height: \"350px\" }}></div> */}\r\n      <Nav />\r\n      <Banner />\r\n      <ReadingBooks />\r\n      <BookList />\r\n      <LibraryBooks />\r\n      {/* <DetailModal bookId={1}/> */}\r\n      <BestKeyword />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,6BAA6B;AAE7C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAUxC,MAAM;EAAEC;AAAM,CAAC,GAAGC,MAAM;AAExB,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAmB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;EAEzFD,SAAS,CAAC,MAAM;IACd;IACAoB,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,QAAQ,IAAK;MACrDJ,cAAc,CAAC,CAACI,QAAQ,CAACC,MAAM,CAACC,QAAQ,EAAEF,QAAQ,CAACC,MAAM,CAACE,SAAS,CAAC,CAAC;MACrEC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MACrBM,aAAa,CAACC,MAAM,CAACP,QAAQ,CAACC,MAAM,CAACE,SAAS,CAAC,EAAEI,MAAM,CAACP,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC;IACpF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAENzB,SAAS,CAAC,MAAM,CAEhB,CAAC,EAAE,CAACkB,WAAW,CAAC,CAAC;EAEjB,MAAMW,aAAa,GAAG,MAAAA,CAAOH,SAAiB,EAAED,QAAgB,KAAK;IACnE,MAAMM,IAAI,GAAG,MAAMC,KAAK;IACxB;IACA;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,oBACEvB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBAEExB,OAAA,CAACP,GAAG;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACP5B,OAAA,CAACN,MAAM;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACV5B,OAAA,CAACH,YAAY;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChB5B,OAAA,CAACL,QAAQ;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACZ5B,OAAA,CAACJ,YAAY;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAEhB5B,OAAA,CAACF,WAAW;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBACd;AAEP;AAACtB,EAAA,CA9CuBD,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}