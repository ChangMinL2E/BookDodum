{"ast":null,"code":"// import { useRef, useState, useCallback, useEffect } from \"react\";\n// import Webcam from \"react-webcam\";\n// import styled from \"styled-components\";\n// import { CameraIcon } from \"@heroicons/react/24/outline\";\n// import Check from \"./Check\";\n// import { useNavigate } from \"react-router-dom\";\n// import { getBookInfo, postBookId } from \"../../apis/isbn\";\n\n// // booktype 필요\n\n// const videoConstraints = {\n//   width: 360,\n//   height: 740,\n//   // facingMode: \"environment\",\n//   facingMode: \"user\",\n// };\n\n// export const Isbn = () => {\n//   const navigate = useNavigate();\n//   const webcamRef = useRef<Webcam>(null);\n//   const [url, setUrl] = useState<string>(\"\");\n//   const [title, setTitle] = useState<string>(\"\");\n\n//   const clickNoBtn = () => {\n//     setTitle(\"\");\n//   };\n\n//   const clickYesBtn = () => {\n//     bookCheck();\n//     alert(\"등록되었습니다.\");\n//     navigate(\"/\");\n//   };\n\n//   const capture = useCallback(() => {\n//     const imageSrc = webcamRef.current?.getScreenshot();\n//     if (imageSrc) {\n//       setUrl(imageSrc);\n//     }\n//   }, [webcamRef]);\n\n//   const bookInfo = async () => {\n//     await getBookInfo(url);\n//   };\n\n//   const bookCheck = async () => {\n//     // await postBookId(bookInfo.id);\n//   };\n\n//   useEffect(() => {\n//     // setTitle(bookInfo.title);\n//   }, [bookInfo]);\n\n//   return (\n//     <div>\n//       {!title ? (\n//         <Cam>\n//           <Webcam\n//             audio={false}\n//             ref={webcamRef}\n//             screenshotFormat=\"image/png\"\n//             videoConstraints={videoConstraints}\n//           />\n//           <Barcode>\n//             <BarcodeBox />\n//             <BarcodeText>\n//               도서 바코드를 사각형 안에 맞추고\n//               <br />\n//               사진을 찍어 책을 등록하세요!\n//             </BarcodeText>\n//           </Barcode>\n//           <Button\n//             onClick={() => {\n//               capture;\n//               bookInfo();\n//             }}\n//           >\n//             <Camera>\n//               <CameraIcon\n//                 width=\"40px\"\n//                 strokeWidth=\"1.5px\"\n//                 color=\"#ffffff\"\n//               ></CameraIcon>\n//             </Camera>\n//           </Button>\n//           {/* 없애야할 부분 */}\n//           {url && (\n//             <>\n//               <div>\n//                 <button\n//                   onClick={() => {\n//                     setUrl(\"\");\n//                   }}\n//                 >\n//                   delete\n//                 </button>\n//               </div>\n//               <div>\n//                 <img src={url} alt=\"Screenshot\" />\n//                 <div>{url}</div>\n//               </div>\n//             </>\n//           )}\n//         </Cam>\n//       ) : (\n//         <Check\n//           title={title}\n//           clickNoBtn={clickNoBtn}\n//           clickYesBtn={clickYesBtn}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // styled component\n// const Cam = styled.div``;\n\n// const Barcode = styled.div`\n//   z-index: 999;\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n// `;\n\n// const BarcodeBox = styled.div`\n//   height: 35%;\n//   width: 95%;\n//   top: 20%;\n//   position: fixed;\n//   border: 4px solid black;\n// `;\n\n// const BarcodeText = styled.div`\n//   text-align: center;\n//   top: 58%;\n//   position: fixed;\n//   font-weight: bold;\n// `;\n\n// const Button = styled.div`\n//   z-index: 999;\n//   border-radius: 100px;\n//   height: 80px;\n//   width: 80px;\n//   background-color: black;\n//   top: 83%;\n//   left: 40%;\n//   position: fixed;\n// `;\n\n// const Camera = styled.div`\n//   position: absolute;\n//   top: 50%;\n//   left: 50%;\n//   transform: translate(-50%, -50%);\n// `;","map":{"version":3,"names":[],"sources":["C:/Users/multicampus/Desktop/S08P22C104/frontend/src/pages/Isbn/index.tsx"],"sourcesContent":["// import { useRef, useState, useCallback, useEffect } from \"react\";\r\n// import Webcam from \"react-webcam\";\r\n// import styled from \"styled-components\";\r\n// import { CameraIcon } from \"@heroicons/react/24/outline\";\r\n// import Check from \"./Check\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { getBookInfo, postBookId } from \"../../apis/isbn\";\r\n\r\n// // booktype 필요\r\n\r\n// const videoConstraints = {\r\n//   width: 360,\r\n//   height: 740,\r\n//   // facingMode: \"environment\",\r\n//   facingMode: \"user\",\r\n// };\r\n\r\n// export const Isbn = () => {\r\n//   const navigate = useNavigate();\r\n//   const webcamRef = useRef<Webcam>(null);\r\n//   const [url, setUrl] = useState<string>(\"\");\r\n//   const [title, setTitle] = useState<string>(\"\");\r\n\r\n//   const clickNoBtn = () => {\r\n//     setTitle(\"\");\r\n//   };\r\n\r\n//   const clickYesBtn = () => {\r\n//     bookCheck();\r\n//     alert(\"등록되었습니다.\");\r\n//     navigate(\"/\");\r\n//   };\r\n\r\n//   const capture = useCallback(() => {\r\n//     const imageSrc = webcamRef.current?.getScreenshot();\r\n//     if (imageSrc) {\r\n//       setUrl(imageSrc);\r\n//     }\r\n//   }, [webcamRef]);\r\n\r\n//   const bookInfo = async () => {\r\n//     await getBookInfo(url);\r\n//   };\r\n\r\n//   const bookCheck = async () => {\r\n//     // await postBookId(bookInfo.id);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     // setTitle(bookInfo.title);\r\n//   }, [bookInfo]);\r\n\r\n//   return (\r\n//     <div>\r\n//       {!title ? (\r\n//         <Cam>\r\n//           <Webcam\r\n//             audio={false}\r\n//             ref={webcamRef}\r\n//             screenshotFormat=\"image/png\"\r\n//             videoConstraints={videoConstraints}\r\n//           />\r\n//           <Barcode>\r\n//             <BarcodeBox />\r\n//             <BarcodeText>\r\n//               도서 바코드를 사각형 안에 맞추고\r\n//               <br />\r\n//               사진을 찍어 책을 등록하세요!\r\n//             </BarcodeText>\r\n//           </Barcode>\r\n//           <Button\r\n//             onClick={() => {\r\n//               capture;\r\n//               bookInfo();\r\n//             }}\r\n//           >\r\n//             <Camera>\r\n//               <CameraIcon\r\n//                 width=\"40px\"\r\n//                 strokeWidth=\"1.5px\"\r\n//                 color=\"#ffffff\"\r\n//               ></CameraIcon>\r\n//             </Camera>\r\n//           </Button>\r\n//           {/* 없애야할 부분 */}\r\n//           {url && (\r\n//             <>\r\n//               <div>\r\n//                 <button\r\n//                   onClick={() => {\r\n//                     setUrl(\"\");\r\n//                   }}\r\n//                 >\r\n//                   delete\r\n//                 </button>\r\n//               </div>\r\n//               <div>\r\n//                 <img src={url} alt=\"Screenshot\" />\r\n//                 <div>{url}</div>\r\n//               </div>\r\n//             </>\r\n//           )}\r\n//         </Cam>\r\n//       ) : (\r\n//         <Check\r\n//           title={title}\r\n//           clickNoBtn={clickNoBtn}\r\n//           clickYesBtn={clickYesBtn}\r\n//         />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // styled component\r\n// const Cam = styled.div``;\r\n\r\n// const Barcode = styled.div`\r\n//   z-index: 999;\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n// `;\r\n\r\n// const BarcodeBox = styled.div`\r\n//   height: 35%;\r\n//   width: 95%;\r\n//   top: 20%;\r\n//   position: fixed;\r\n//   border: 4px solid black;\r\n// `;\r\n\r\n// const BarcodeText = styled.div`\r\n//   text-align: center;\r\n//   top: 58%;\r\n//   position: fixed;\r\n//   font-weight: bold;\r\n// `;\r\n\r\n// const Button = styled.div`\r\n//   z-index: 999;\r\n//   border-radius: 100px;\r\n//   height: 80px;\r\n//   width: 80px;\r\n//   background-color: black;\r\n//   top: 83%;\r\n//   left: 40%;\r\n//   position: fixed;\r\n// `;\r\n\r\n// const Camera = styled.div`\r\n//   position: absolute;\r\n//   top: 50%;\r\n//   left: 50%;\r\n//   transform: translate(-50%, -50%);\r\n// `;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}